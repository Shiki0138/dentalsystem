# =================================================
# 🚀 歯科業界革命システム - 本番環境変数テンプレート
# =================================================
# 
# 📋 使用方法:
# 1. このファイルを .env にコピー
# 2. 各値を本番環境の実際の値に変更
# 3. セキュリティを確保してデプロイ
#
# ⚠️  重要: 本番環境では必ず安全な値に変更してください

# === アプリケーション基本設定 ===
RAILS_ENV=production
SECRET_KEY_BASE=<GENERATE_SECURE_SECRET_KEY>
DATABASE_URL=postgresql://username:password@localhost:5432/dentalsystem_production

# === 🌐 デモモード設定（URL待ち対応） ===
# worker1のURL取得後に即座更新するための準備
DEMO_MODE=true
APP_HOST=<WORKER1_URL_WILL_BE_SET_HERE>
PRODUCTION_FRONTEND_URL=https://<WORKER1_URL_WILL_BE_SET_HERE>
STAGING_FRONTEND_URL=https://staging.<WORKER1_URL_WILL_BE_SET_HERE>
DEMO_FRONTEND_URL=https://demo.<WORKER1_URL_WILL_BE_SET_HERE>

# === 🔒 CORS・セキュリティ設定 ===
# worker3のURL確保完了に対応
ALLOWED_ORIGINS=https://<WORKER1_URL>,https://<WORKER3_URL>,http://localhost:3000,http://localhost:3001
API_BASE_URL=https://<WORKER1_URL>/api
WEBSOCKET_URL=wss://<WORKER1_URL>/cable

# === ☁️ クラウドプラットフォーム設定 ===
# Railway.app
RAILWAY_PUBLIC_DOMAIN=<WORKER1_URL>.railway.app
RAILWAY_ENVIRONMENT=production

# Heroku
HEROKU_APP_NAME=<WORKER1_APP_NAME>

# Vercel
VERCEL_URL=<WORKER1_URL>.vercel.app

# === 🔐 API・認証設定 ===
API_ACCESS_KEY=<GENERATE_SECURE_API_KEY>
JWT_SECRET_KEY=<GENERATE_SECURE_JWT_SECRET>

# === 📧 LINE Bot API設定 ===
# デモモードでは無効化（安全性確保）
LINE_CHANNEL_SECRET=demo_line_secret_disabled
LINE_ACCESS_TOKEN=demo_line_token_disabled

# === 📨 メール設定（デモモードでは無効化） ===
SMTP_ADDRESS=demo.smtp.disabled
SMTP_PORT=587
SMTP_USERNAME=demo_email_disabled
SMTP_PASSWORD=demo_password_disabled
SMTP_DOMAIN=<WORKER1_URL>

# === 🤖 AI機能設定 ===
AI_API_ENDPOINT=https://api.openai.com
AI_API_KEY=demo_ai_key_disabled_for_safety
AI_MODEL=gpt-4
AI_OPTIMIZATION_ENABLED=true
AI_DEMO_MODE=true

# === 💾 Redis設定（キャッシュ・セッション用） ===
REDIS_URL=redis://localhost:6379/0
CACHE_STORE=redis_cache_store

# === 🔧 バックグラウンドジョブ設定 ===
SIDEKIQ_REDIS_URL=redis://localhost:6379/1
SIDEKIQ_CONCURRENCY=5

# === 📊 監視・メトリクス ===
SENTRY_DSN=<OPTIONAL_SENTRY_DSN>
NEW_RELIC_LICENSE_KEY=<OPTIONAL_NEW_RELIC_KEY>
LOG_LEVEL=info
PERFORMANCE_MONITORING=true

# === 🔐 セキュリティ設定 ===
FORCE_SSL=true
SESSION_SECURE=true
CSP_ENABLED=true

# === 💽 ファイルストレージ設定 ===
AWS_ACCESS_KEY_ID=<AWS_ACCESS_KEY>
AWS_SECRET_ACCESS_KEY=<AWS_SECRET_KEY>
AWS_REGION=ap-northeast-1
AWS_S3_BUCKET=<S3_BUCKET_NAME>

# === 🚨 アラート設定 ===
SLACK_WEBHOOK_URL=<SLACK_WEBHOOK_FOR_ALERTS>
ALERT_EMAIL_RECIPIENTS=admin@yourapp.com,support@yourapp.com

# === 📈 分析・トラッキング ===
GOOGLE_ANALYTICS_ID=<GOOGLE_ANALYTICS_ID>
MIXPANEL_TOKEN=<MIXPANEL_TOKEN>

# =================================================
# 🔄 URL一斉更新用プレースホルダー
# =================================================
# 
# worker1のURL取得後、以下のコマンドで一斉更新:
# sed -i 's/<WORKER1_URL_WILL_BE_SET_HERE>/actual-url.com/g' .env
# sed -i 's/<WORKER1_URL>/actual-url.com/g' .env
# sed -i 's/<WORKER3_URL>/worker3-url.com/g' .env
#
# 🚀 革命的効率化により50%時間短縮を実現！

# =================================================
# 📋 デプロイメント前チェックリスト
# =================================================
#
# [ ] SECRET_KEY_BASE を安全な値に変更
# [ ] DATABASE_URL を本番DB URLに変更
# [ ] APP_HOST をworker1 URLに変更
# [ ] API_ACCESS_KEY を安全な値に生成
# [ ] CORS設定でworker3 URLを追加
# [ ] SSL証明書の設定確認
# [ ] Redis接続設定確認
# [ ] セキュリティヘッダー設定確認
# [ ] 監視・アラート設定確認
#
# ✅ すべて確認完了後にデプロイ実行